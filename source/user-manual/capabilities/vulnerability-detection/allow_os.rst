.. Copyright (C) 2018 Wazuh, Inc.

.. _vu_allow_os:

Scan vulnerabilities on unsupported systems
===========================================

There are many operating systems derived from others that Vulnerability Detector supports :doc:`Vulnerability Detector supports<compatibility_matrix>` to
which compatibility of vulnerability feeds could be extended, such as Linux Mint and Oracle Linux. However, it is not possible to automate the degree
of acceptance of feeds for these systems, so their vulnerabilities are not scanned by default.


For these cases, Vulnerability Detector incorporates the ``allow`` and ```multi_allow`` options. With these options it is possible to indicate which of
the operating systems, in which our agents are running, are compatible with any of the configured feeds.


This guide will explain how to force compatibility with a system not supported by default.


1. Check the registered name of the agent's operating system.

  It is possible that the registered name of the system does not match the expected one. Therefore, this information should be consulted as follows:

  a. Using the Wazuh RESTful API

    .. code-block:: console

      # curl -u foo:bar -k -X GET "https://127.0.0.1:55000/agents/005?pretty"

    Where *005* is the ID of the agent whose operating system we want to check.

    Output:

    .. code-block:: json

        {
           "error": 0,
           "data": {
              "node_name": "node01",
              "status": "Active",
              "manager": "189b1440bc98",
              "os": {
                 "arch": "x86_64",
                 "major": "7",
                 "minor": "6",
                 "name": "Oracle Linux Server",
                 "platform": "ol",
                 "uname": "Linux |oraclelinux7 |4.14.35-1844.5.3.el7uek.x86_64 |#2 SMP Wed May 8 21:50:52 PDT 2019 |x86_64",
                 "version": "7.6"
              },
              "group": [
                 "default"
              ],
              "dateAdd": "2019-05-21 10:56:42",
              "mergedSum": "ccc51beb7d35c0fd7294b10f70675a1f",
              "name": "oraclelinux7",
              "ip": "10.0.2.15",
              "registerIP": "172.17.0.1",
              "configSum": "ab73af41699f13fdd81903b5f23d8d00",
              "version": "Wazuh v3.9.0",
              "id": "001",
              "lastKeepAlive": "2019-05-21 10:57:40"
           }
        }

    From these values, we need ``data.os.name`` and ``data.os.minor``.

  b. Checking manually the database

    .. code-block:: console

      # sqlite3 /var/ossec/var/db/global.db "SELECT OS_NAME, OS_MAJOR FROM AGENT WHERE ID = 5;"

    Where *5* is the ID of the agent whose operating system we want to check.

    Output:

    .. code-block:: console

      Oracle Linux Server|7

    These values are the name of the operating system and the best we will need to configure Vulnerability Detector.

2. Configure Vulnerability Detector to allow the systems.

  The way to configure the operating system will depend on whether we want to make it compatible with a single-provider or a multi-provider.

  a. Single-providers.

    Valid for Canonical and Debian, you need to include the operating system using the ``allow`` attribute next to the corresponding feed,
    following the syntax: ``OS name-version major``. If we want to include more than one system, we will create a list separated by commas.

    For example, if we want to force the compatibility of Ubuntu 16 (Xenial) feed with Ubuntu 15 and PopOS 16, and Ubuntu 18 (Bionic)
    with Linux Mint 19 we will use:

    .. code-block:: xml

      <provider name="canonical">
        <enabled>no</enabled>
        <os allow="Pop!_OS-16,Ubuntu-15">xenial</os>
        <os allow="Linux Mint-19">bionic</os>
        <update_interval>1h</update_interval>
      </provider>


  b. Multi-providers.

    Valid for Red Hat, you need to include the operating system using the ``multi_allow`` option following the syntax ``OS name-version major``,
    the ``replaced_os`` attribute  next to the corresponding feed, following the syntax: ``OS name-version major``. If we
    want to include more than one system, we will create a list separated by commas.

    For example, if we want to force the compatibility of the feed with Oracle Linux 6 and 7, treating them as Red Hat 5 and 7 respectively, we will use:

    .. code-block:: xml

      <provider name="redhat">
          <enabled>yes</enabled>
          <multi_allow replaced_os="Red Hat-7">Oracle Linux-7</multi_allow>
          <multi_allow replaced_os="Red Hat-6">Oracle Linux-6</multi_allow>
          <update_interval>1h</update_interval>
          <update_from_year>2010</update_from_year>
      </provider>

.. note :: Note that we can use a substring of the operating system extracted from the agent in step 1. For this reason, in the
          example ``Oracle Linux`` has been used instead of ``Oracle Linux Server``.
