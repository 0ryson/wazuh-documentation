.. Copyright (C) 2018 Wazuh, Inc.

.. vu_offline_update:

Offline Update
==============

If your manager does not have direct connection to Internet, is possible to keep the vulnerability feeds updated by fetching the database files from your local environment or network. To do this, you must download the specific vulnerability files and to inform Wazuh how to locate them.

- `Canonical`_
- `Debian`_
- `Red Hat`_
- `National Vulnerability Database`_


Canonical
^^^^^^^^^

To perform an offline update of Canonical feeds, you must download the corresponding OVAL files:

+------------+--------------------------------------------------------------------------------------------+
| OS         | Link                                                                                       |
+============+============================================================================================+
| Bionic     | `<https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.bionic.cve.oval.xml>`_     |
+------------+--------------------------------------------------------------------------------------------+
| Xenial     | `<https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.xenial.cve.oval.xml>`_     |
+------------+--------------------------------------------------------------------------------------------+
| Trusty     | `<https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.trusty.cve.oval.xml>`_     |
+------------+--------------------------------------------------------------------------------------------+
| Precise    | `<https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.precise.cve.oval.xml>`_    |
+------------+--------------------------------------------------------------------------------------------+

If you want a local update, just use the ``path`` attribute accompanying the ``os`` option as follows:

.. code-block:: xml

    <provider name="canonical">
        <disabled>no</disabled>
        <os path="/local_path/com.ubuntu.bionic.cve.oval.xml">bionic</os>
        <os path="/local_path/com.ubuntu.xenial.cve.oval.xml">xenial</os>
        <os path="/local_path/com.ubuntu.trusty.cve.oval.xml">trusty</os>
        <os path="/local_path/com.ubuntu.precise.cve.oval.xml">precise</os>
        <update_interval>1h</update_interval>
    </provider>

If you want to upgrade from your an alternative repository, the configuration would be similar to the following:

.. code-block:: xml

    <provider name="canonical">
        <disabled>no</disabled>
        <os url="http://local_repo/com.ubuntu.bionic.cve.oval.xml">bionic</os>
        <os url="http://local_repo/com.ubuntu.xenial.cve.oval.xml">xenial</os>
        <os url="http://local_repo/com.ubuntu.trusty.cve.oval.xml">trusty</os>
        <os url="http://local_repo/com.ubuntu.precise.cve.oval.xml">precise</os>
        <update_interval>1h</update_interval>
    </provider>

Debian
^^^^^^

To perform an offline update of Debian feeds, you must download the corresponding OVAL files:

+------------+--------------------------------------------------------------------------------------------+
| OS         | Link                                                                                       |
+============+============================================================================================+
| Stretch    | `<https://www.debian.org/security/oval/oval-definitions-stretch.xml>`_                     |
+------------+--------------------------------------------------------------------------------------------+
| Jessie     | `<https://www.debian.org/security/oval/oval-definitions-jessie.xml>`_                      |
+------------+--------------------------------------------------------------------------------------------+
| Wheezy     | `<https://www.debian.org/security/oval/oval-definitions-wheezy.xml>`_                      |
+------------+--------------------------------------------------------------------------------------------+

If you want a local update, just use the ``path`` attribute accompanying the ``os`` option as follows:

.. code-block:: xml

    <provider name="debian">
        <disabled>no</disabled>
        <os path="/local_path/oval-definitions-stretch.xml">stretch</os>
        <os path="/local_path/oval-definitions-jessie.xml">jessie</os>
        <os path="/local_path/oval-definitions-wheezy.xml">wheezy</os>
        <update_interval>1h</update_interval>
    </provider>

If you want to upgrade from your an alternative repository, the configuration would be similar to the following:

.. code-block:: xml

    <provider name="debian">
        <disabled>no</disabled>
        <os url="http://local_repo/oval-definitions-stretch.xml">stretch</os>
        <os url="http://local_repo/oval-definitions-jessie.xml">jessie</os>
        <os url="http://local_repo/oval-definitions-wheezy.xml">wheezy</os>
        <update_interval>1h</update_interval>
    </provider>

Red Hat
^^^^^^^

To perform an offline update of Red Hat feed, you must make requests to its API to get the feeds pages from the desired date. The following script is an example of how to do this:

.. code-block:: bash

    #!/bin/bash

    page=1
    year=$1

    if [ $# -ne 1 ]
    then
    	echo "Use: $0 <min_year>"
    	exit 1
    fi

    while [ true ]
    do
    	link="https://access.redhat.com/labs/securitydataapi/cve.json?after=$year-01-01&per_page=1000&page=$page"
    	file=redhat-feed$page.json
    	echo "Fetching $link to $file"
    	wget --output-document=$file $link 2> /dev/null
    	content=`cat $file`
    	if [[ $content == "[]" ]]  || [[ $content == "" ]]
    	then
    		rm $file
    		break
    	fi
    	page=$[ $page + 1 ]
    done

    exit 0

In this case, you will have the feed divided into a succession of numbered files whose name follows format ``redhat-feed<number>.json``. To update locally, the path to those files must be indicated by a regular expression such as the following:

.. code-block:: xml

    <provider name="redhat">
        <disabled>no</disabled>
        <multi_path>/local_path/redhat-feed.*json$</multi_path>
        <update_interval>1h</update_interval>
    </provider>


If you want to upload these files to a local server, they must follow the same numerical sequence in the link, and indicate their position with the ``[-]`` tag helped by the ``start`` and ``end`` attributes to indicate the numerical range. For example, if the previous script has returned 15 files, the configuration would look like this:

.. code-block:: xml

    <provider name="redhat">
        <disabled>no</disabled>
        <multi_url start="1" end="15">http://local_repo/redhat-feed[-].json</multi_url>
        <update_interval>1h</update_interval>
    </provider>

National Vulnerability Database
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

To perform an offline update of National Vulnerability Database, you must make requests to its feeds from the desired date. The following script is an example of how to do this:

.. code-block:: bash

    #!/bin/bash

    year=$1
    max_year=`date | cut -d " " -f 6`

    if [ $# -ne 1 ]
    then
    echo "Use: $0 <min_year>"
    exit 1
    fi

    while [ true ]
    do
    link="https://nvd.nist.gov/feeds/json/cve/1.0/nvdcve-1.0-$year.json.gz"
    file=nvd-feed$year.json
    echo "Fetching $link to $file"
    wget --output-document=$file.gz $link 2> /dev/null
    gunzip -f $file.gz $file 2> /dev/null
    content=`cat $file` 2> /dev/null
    if [ $year -eq $max_year ]
    then
        break
    fi
    year=$[ $year + 1 ]
    done

    exit 0

In this case, you will have the feed divided into a succession of numbered files whose name follows format ``nvd-feed<number>.json``. To update locally, the path to those files must be indicated by a regular expression such as the following:

.. code-block:: xml

    <provider name="nvd">
        <disabled>no</disabled>
        <multi_path>/local_path/nvd-feed.*json$</multi_path>
        <update_interval>1h</update_interval>
    </provider>


If you want to upload these files to a local server, they must follow the same numerical sequence in the link, and indicate their position with the ``[-]`` tag helped by the ``start`` and ``end`` attributes to indicate the numerical range. For example, if you have the files from 2015 to 2019, the configuration would look like this:

.. code-block:: xml

    <provider name="nvd">
        <disabled>no</disabled>
        <multi_url start="2015" end="2019">http://local_repo/nvd-feed[-].json</multi_url>
        <update_interval>1h</update_interval>
    </provider>
