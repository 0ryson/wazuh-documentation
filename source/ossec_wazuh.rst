OSSEC Wazuh
===========

Introduction
------------

This document will guide you through the installation, configuration and integration of ELK Stack and OSSEC HIDS. We will make use of expanded logging features that have been implemented in our OSSEC Github fork, along with custom Logstash/Elasticsearch configurations, our OSSEC rule, our OSSEC RESTful API and Kibana with hardcoded modifications.
 
Components and architecture 
^^^^^^^^^^^^^^^^^^^^^^^^^^^

See below a brief descriptioon of the components and tools involved in the intgration of OSSEC HIDS with ELK Stack, for long term data storage, alerts indexing, management and visualization.

+ `OSSEC HIDS <http://www.ossec.net/>`_: Performs log analysis, file integrity checking, policy monitoring, rootkits/malware detection and real-time alerting. The alerts are written in an extended JSON format, and stored locally in the box running the OSSEC manager.

- `Logstash <https://www.elastic.co/products/logstash/>`_: Is a data pipeline used process logs and other event data from a variety of systems. Logstash will read and process OSSEC JSON files, adding IP Geolocation information and modeling data before sending it to the Elasticsearch Cluster.

+ `Logstash-Forwarder <https://www.elastic.co/products/logstash/>`_: Is a shipment tool used to send logs from our OSSEC manager server to our Logstash server, where we will also be running our instance of Elasticsearch.

- `Elasticsearch <https://www.elastic.co/products/elasticsearch/>`_: Is the search engine used to index and store our OSSEC alerts. It can be deployed as a cluster, with multiple nodes, for better performance and data replication. 

+ `Kibana <https://www.elastic.co/products/kibana/>`_: Kibana is a WEB framework used to explore all elasticsearch indexes. We will use it to analyze OSSEC alerts and to create custom dashboards for different use cases, including compliance regulations like PCI DSS or benchmarks like CIS.

These components are meant to communicate with each other, so the original data generated by your systems and applications is centralized, analyzed, indexed, stored and made available for you at the Kibana interface. See an architectural graph below describing this data flow:

.. image:: images/architecture_wazuh.png
   :align: center
   :width: 80%

OSSEC alerts dashboard 
^^^^^^^^^^^^^^^^^^^^^^

Kibana offers interactive visualization capabilities, that we have used to put together an OSSEC alerts dashboard with visualization of alerts geolocation and timeline. In addition you will be able to see the alerts level evolution, and charts showing you aggregated information for easy analysis. Filters can also be applied, as all alert fields are also indexed by the search engine. See below an screenshot of this dashboard.

.. image:: images/ossec_dashboard_alert.png
   :align: center
   :width: 80%

PCI DSS compliance dashboard
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

OSSEC HIDS can be used to become compliant with PCI DSS, specially because of the intrusion detection, file integrity monitoring and policy enforcement capabilities. This dashboard will make use of OSSEC rules mapping with the compliance controls, showing useful information to identify which systems are not fully compliant with the regulation.

.. image:: images/ossec_dashboard_pci.png
   :align: center
   :width: 80%

Table of contents
-----------------

.. toctree::
   :maxdepth: 2

   installing_ossec_wazuh
   integrating_ossec_elk 
   installing_ossec_api
