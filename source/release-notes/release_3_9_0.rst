.. Copyright (C) 2019 Wazuh, Inc.

.. _release_3_9_0:

3.9.0 Release Notes
===================

In this section, we're listing the starred improvements and fixes in Wazuh 3.9.0. A complete list of changes is provided in the `changelog <https://github.com/wazuh/wazuh/blob/3.9/CHANGELOG.md>`_.

Wazuh Core improvements
------------------------

Additions
^^^^^^^^^

        * A very important change is the addition of a new module to perform **Security Configuration Assessment (SCA)** scans.

            This new module improves the way Wazuh monitors the policies. The policy files are now updated and translated to YAML with more interesting fields, these files are parsed by this new module and after that the scans are performed, in each of them, the new information gathered is stored at a database where differences between consecutive scans are made, this makes possible generating an alert for every check that has changed its result. Also, a statistical alert that summaries the checking process is generated in every scan.

            To know more about this module, let's add an example that runs a scan the 15th of every month:

                .. code-block:: xml

                    <configuration-assessment>
                        <enabled>yes</enabled>
                        <scan_on_start>yes</scan_on_start>
                        <scan_day>15</scan_day>
                        <skip_nfs>yes</skip_nfs>

                        <policies>
                            <policy>cis_debian_linux_rcl.yml</policy>
                        </policies>
                    </configuration-assessment>

            The events generated by this module are shown in **Kibana** this way:

                .. thumbnail:: ../images/release-notes/3.9.0/conf-assessment-kibana.png
                    :title: Security configuration assessment events filtered in Kibana.
                    :align: center
                    :width: 100%

        * Added support in **Syscollector** for network and open ports inventory on Windows XP.

            Now, *Syscollector* supports ``<network>`` and ``<ports>`` on legacy *Windows XP* and *Windows Server 2003*.

        * `Syscollector <https://documentation.wazuh.com/current/user-manual/reference/ossec-conf/wodle-syscollector.html?highlight=syscollector>`_ data is now decoded into dynamic fields, so we can define rules based on events from *Syscollector*:

            Using ``syscollector`` as the value in ``<decoded_as>`` field on a decoder will result in Kibana showing alerts as ``syscollector`` fields *(data.type.value)*

                .. thumbnail:: ../images/release-notes/3.9.0/syscollector.png
                    :title: Syscollector events filtered in Kibana.
                    :align: center
                    :width: 70%

        * New option in *File Integrity Monitoring* to enable the *health check* for ``<whodata>``.

            .. code-block:: bash

                # /var/ossec/etc/ossec.conf

                <syscheck>
                    <whodata>
                        <startup_healthcheck>yes</startup_healthcheck>
                    </whodata>
                </syscheck>

        * Added extra information in the agents' alerts to show IDs of each agent when they change their status (disconnect or remove).

            This allows keeping a track on the deleted and disconnected agents in the alerts, as before when an agent disconnected from the manager, in the logs was not showed its ID. 

        * Added support for hot added symbolic links in Whodata, that was not prepared to handle the event that created a symbolic link.

        * Added *-t* and *-c* options to `wazuh-clusterd daemon. <https://documentation.wazuh.com/current/user-manual/reference/daemons/clusterd.html>`_ 

            These options allow to perform configuration tests and see a log with the errors when starting the cluster and it makes wazuh no longer run binary files when the cluster configuration fails.

Improvements
^^^^^^^^^^^^

        * `ossec-remoted <https://documentation.wazuh.com/current/user-manual/reference/daemons/ossec-remoted.html>`_ daemon now shows an error message when it quits for not being properly configured:

            .. code-block:: bash

                "Remoted connection is not configured... Exiting."

        * Now `agent_auth <https://documentation.wazuh.com/current/user-manual/reference/tools/agent-auth.html>`_ daemon warns users when it receives extra input arguments.

            .. code-block:: bash

                $ ./agent-auth -m 192.168.1.1 -i 192.168.1.2
                2019/02/05 07:00:08 agent-auth: WARNING: Extra arguments detected. They will be ignored.
                2019/02/05 07:00:08 agent-auth: INFO: Started (pid: 7252).
        
        * As *Fedora 29 version* has added support for *Audit 3.0 (beta)*, it can be configured to use the `who-data <https://documentation.wazuh.com/current/user-manual/capabilities/auditing-whodata/index.html>`_ option.

        * Now **Syscollector** gets *bonded* interfaces' MAC:

            This change adds the possibility of getting the real MAC address of each interface in `/sys/class/net/address` instead of getting it from interfaces with *AF_PACKET* sockets, avoiding this way problems with bonded interfaces that share the same MAC address at the software level.

        * From this version on, the *manager* will know the primary IP of the agents that will be updated every time an agent sends a keep alive.

            The manager will store that IP in the global database and it will be printed in the Wazuh app. With this change, although an agent is registered with **any** as IP, the manager will know the agent's current IP. 

        * Added support to AWS organizations in *CloudTrail* service:

            With this enhancement, it is possible getting logs for created organizations by adding ``<aws_organization_id>ORGANIZATION</aws_organization_id>`` in the wodle configuration, which will create a new directory in the path where save the *accounts id*.

            .. code-block:: xml

                <wodle name="aws-s3">
                    <disabled>no</disabled>
                    <bucket type="cloudtrail">
                        <name>cloudtrail</name>
                        <aws_organization_id>wazuh</aws_organization_id>
                        <aws_profile>default</aws_profile>
                    </bucket>
                    <remove_from_bucket>no</remove_from_bucket>
                    <interval>20m</interval>
                    <run_on_start>yes</run_on_start>
                    <skip_on_error>no</skip_on_error>
                </wodle>

        * Optimized network performance in *ossec-remoted* daemon by introducing a network buffer to cache incomplete messages from agents.

            With this method, *ossec-remoted* daemon does not wait for complete messages when it's not necessary, improving the performance of the network greatly.

        * Labels starting with ``_`` are reserved now for internal use only (this was added to allow the manager to know the agent's IP upper mentioned).

        * Improved cluster performance: Embedded *Python 3* and updated to *asyncio library*:

            Changed the internal cluster structure to adapt it to the 3.7.2 version of Python, which along with the *asyncio library* (`Asynchronous I/O <https://docs.python.org/3/library/asyncio.html>`_) has improved the cluster speed greatly. 

        * Some improvements have been made in the *vulnerability-detector* module. Now it checks that the alerts severity has been unified, checks the scan messages are not showed when the database is empty, etc.

        * The team has performed a refactor of the decoded fields from the Windows eventchannel decoder after change almost the entire module.

Fixes
^^^^^

        - Fixed error in Syscollector for Windows older than Vista when gathering the hardware inventory. The ``syscollector_win_ext.dll`` library failed to load when tried to obtain hardware information.
        - Fixed an error in the OSquery configuration validation. The ``osqueryd`` daemon started no matter the string it received, whether it was yes, no or anything else.
        - Wazuh manager starts regardless of the contents of ``local_decoder.xml``. The manager failed to start when ``local_decoder.xml`` was empty.
        - Delete empty fields from Windows Eventchannel alerts. It returned some empty fields at the ``EvenData`` block. It was better not to show those specific fields.
        - Fix duplicate field names at some events for Windows eventchannel.  Now events containing more than one field called Data are modified to join those fields into one if they have relevant information.
        - Fixed memory leak and crash in *Vulnerability Detector*.
        - Prevent *Integrator, Syslog Client and Mail forwarded* from getting stuck while reading ``alerts.json``.
        - Fix out-of-memory error in *Remoted* when upgrading an agent with a big data chunk.
        - Re-registered agent are reassigned to correct groups when the multigroup is empty. When an agent was removed from a multigroup and said multigroup was thus empty, registering again the same agent did not assign it to its previous multigroup.
        - Let *Remoted* wait for download module availability. This will prevent timing issues with external shared files download.
        - Prevent `Analysisd <https://documentation.wazuh.com/current/user-manual/reference/daemons/ossec-analysisd.html?highlight=analysisd>`_ from crashing when receiving an invalid *Syscollector* event.
        - Fix a bug in the database synchronization module that left broken references of removed agents to groups. This fixes the count of agents belonging to a group, preventing the Framework from counting removed agents.
        - Fixed defects reported by *Cppcheck* as bugs caused by grammatic typos, wrong use of variables, etc. 
        - Fixed a bug that could make an Agent running on Windows XP close unexpectedly while receiving a WPK file.
        - Fixed a memory hazard in *Analysisd* on log pre-decoding for short logs (less than 5 bytes).
        - Prevent Execd from becoming defunct when Active Response disabled. 

Wazuh Ruleset improvements
---------------------------

Additions
^^^^^^^^^

        * Added *Sysmon rules* to new Windows eventchannel format.

            The anomalies on event **ID 1** of *Sysmon* can be detected now thanks to these new rules.

            .. code-block:: xml

                <rule id="20351" level="0">
                    <if_sid>20350</if_sid>
                    <field name="EventChannel.EventData.ParentImage">\\services.exe</field>
                    <description>Sysmon - Legitimate Parent Image - svchost.exe</description>
                </rule>


                <rule id="20352" level="12">
                    <if_group>sysmon_event1</if_group>
                    <field name="EventChannel.EventData.Image">lsm.exe</field>
                    <description>Sysmon - Suspicious Process - lsm.exe</description>
                    <group>pci_dss_10.6.1,pci_dss_11.4,gdpr_IV_35.7.d,</group>
                </rule>

        * Added *Security Configuration Assessment* module files:

            The team has added a full directories structure with many new rules for the *SCA* module and many other features related to this module as decoders, new policy files in YAML, etc. 

        * Added new options ``<same_field>`` and ``<not_same_field>`` to the Windows eventchannel to correlate dynamic fields in rules.

Improvements
^^^^^^^^^^^^

        * Improved rules for the docker to prevent the activation of certain rules that should not be activated.

        * Modified the structure and the names for Windows eventchannel fields in rules.

Fixes
^^^^^

        * Fixed the bruteforce attack rules for Windows Eventchannel by adding the new ``<same_field>`` option and changing some rules.

Wazuh API
---------

Additions
^^^^^^^^^

    *Wazuh API* has received multiple additions that allow users to make different API calls to perform Wazuh tasks more easily.

        * Now, the *Wazuh API* can make calls to edit the Wazuh configuration files as ``ossec.conf`` and to edit rules, lists and decoders.

            This, in combination with the Kibana app, results in a place where all the configuration is done, avoiding bouncing between files to change a single word, and making a more centralized and easy configuration of Wazuh.

            As a example, to edit a rules file:

            .. code-block:: bash

                # curl -u foo:bar -X POST -H "Content-type:application/xml" -d /var/ossec/etc/rules/local_rules.xml "http://localhost:55000/manager/files?path=etc/rules/new_rules.xml"
                
                {
                    "error":0,"data":"File updated successfully"
                }

        * Also, added calls to restart manager nodes in the cluster when the ruleset is synchronized or pushed from the API.

        * Added calls to get CDB lists.

                Making calls to *get a CDB list* filtered by *audit* filed:

                .. code-block:: bash

                    # curl -u foo:bar -k -X GET "http://127.0.0.1:55000/lists?pretty&search=audit"
                        
                        {
                            "error": 0,
                            "data": {
                                "totalItems": 1,
                                "items": [
                                    {
                                        "path": "etc/lists/audit-keys",
                                        "items": [
                                        {
                                            "key": "audit-wazuh-w",
                                            "value": "write"
                                        },
                                        {
                                            "key": "audit-wazuh-r",
                                            "value": "read"
                                        },
                                        {
                                            "key": "audit-wazuh-a",
                                            "value": "attribute"
                                        },
                                        {
                                            "key": "audit-wazuh-x",
                                            "value": "execute"
                                        },
                                        {
                                            "key": "audit-wazuh-c",
                                            "value": "command"
                                        }
                                        ]
                                    }
                                ]
                            }
                        }


        * Added API calls to get *SCA* policies and checks.

            .. code-block:: bash

                # GET /policy-monitoring
                    
                    {
                        "error": 0,
                        "data": {
                            "totalItems": 2,
                            "items": [
                                {
                                    "scan_id": 1,
                                                    "name": "pm_name1",
                                                    "description": "description1",
                                    "pass": 272,
                                    "fail": 33,
                                    "unknown": 0,
                                    "score": 89,
                                                    "policy_id": "aaa",
                                                    "hash": "asdfasdfasdfasdfasdf",
                                    "start_scan": "2019-01-11 19:51:45",
                                    "end_scan": "2019-01-11 20:51:45",
                                                    "references": "references1"
                                },
                                {
                                    "scan_id": 2,
                                                    "name": "pm_name2",
                                                    "description": "description1",
                                    "pass": 22,
                                    "fail": 3,
                                    "unknown": 5,
                                    "score": 56,
                                                    "policy_id": "bbb",
                                                    "hash": "asdfasdfasdfasdfasdf",
                                    "start_scan": "2019-01-11 18:51:45",
                                    "end_scan": "2019-01-12 18:51:45",
                                                    "references": "references2"
                                }
                            ]
                        }
                    }

Improvements
^^^^^^^^^^^^

        * API has migrated to *Python 3.7*.

Fixes
^^^^^

        * Fixed documentation regarding *DELETE /agents* API call and *older_than* default value.
