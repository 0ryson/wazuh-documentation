.. Copyright (C) 2020 Wazuh, Inc.

Unattended installation
=======================

This section will explain how to install the Wazuh-Elastic Stack components on separate hosts by using a single script that has to be run on each of the involved in the installation machines and will automatically detect whether the operating system uses ``rpm`` or ``deb`` packages. It will also perform a health check verifying that the available system resources of each host meet the minimal requirements. For more information, please visit the :ref:`Requirements <distributed_requirements>` section.

The script will install Java Development Kit and other packages including ``unzip`` and ``libcap`` required by Open Distro for Elasticsearch. Besides, the `Search Guard offline TLS tool <https://docs.search-guard.com/latest/offline-tls-tool>`_ will be used to deploy the certificates for protecting data in the Elastic Stack.

Although the script allows to install both an Elasticsearch cluster node and a Wazuh cluster node in a same machine, this is not recommended. Kibana, on the other hand, should be installed on the same machine as an Elasticsearch cluster master node or on a separate host.

Prerequisites
-------------

.. note:: Root user privileges are required to execute all the commands described below.

In order to download the script, ``curl`` package must be installed on the system:

.. tabs::

  .. group-tab:: Yum

    .. code-block:: console

        # yum install curl


  .. group-tab:: APT

    .. code-block:: console

        # apt install curl

Elasticsearch installation
--------------------------

The script should be run on every Elasticsearch node involved in the installation. In addition, Kibana can be installed on the Elasticsearch master node.

Choose between the Elasticsearch single-node cluster and the Elasticsearch multi-node cluster:

.. tabs::


  .. group-tab:: Elasticsearch single-node

    Download and run the script providing the following options and their values:

    - ``-e``: To install Elasticsearch node.

    - ``Option name`` (network.host): Elasticsearch host’s IP.

    - ``Option name``: Number of Wazuh servers involved in the installation.

    If Kibana will be installed on the same host as Elasticsearch, the following options must be added:

    - ``-k``: to install Kibana on the same host as Elasticsearch.

    - ``Option name`` (kibana_ip): the Kibana's IP address. The value ``0.0.0.0`` is accepted and means that Kibana will accept all the available IPs of the machine.

    .. code-block:: console

        # command


  .. group-tab:: Elasticsearch multi-node

    Download and run the script using the following option with the values. The [*Master*] tag indicates that the option should be used only in case of installing Elasticsearch master node:

    - ``-e``: to install Elasticsearch node.

    - ``Option name`` (network.host): the Elasticsearch's host's IP.

    - ``Option name`` (node.name): The node name. E.g.: ``node-1``.

    - ``Option name`` (cluster.name): Elasticsearch cluster name. E.g.: ``elastic-cluster-production``.

    - ``Option name`` (cluster.initial_master_nodes): Elasticsearch cluster master-eligible node names. E.g.: ``node-2``.

    - ``Option name`` (discovery.seed_hosts): Elasticsearch cluster master-eligible nodes IP. E.g.: ``10.0.0.3``.

    - [*Master*] ``Option name``: number of Wazuh servers involved in the installation.

    If Kibana will be installaed on the same host as Elasticsearch, the following options must be added:

    - ``-k``: to install Kibana on the same host as Elasticsearch.

    - ``kibana_ip``: the Kibana's IP address. The value ``0.0.0.0`` is accepted and means that Kibana will accept all the available IPs of the machine.

    .. code-block:: console

        # command

    After executing the script on Elasticsearch master node, the ``/etc/elasticsearch/certs/certs.tar`` file is created. It contains generated by ``Search Guard offline TLS tool`` certificates and must be placed into each Elasticsearch node, except the master node, each Wazuh server host, and Kibana's host if it is going to be installed on a different machine as Elasticsearch master node. The file can be copied, for example, using ``scp`` and must be placed in ~/ (home user folder).

    Repeat the script execution on each host where the Elasticsearch is going to be installed.


Verifying the Elasticsearch installation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The output of the script will indicate if Elasticsearch was successfully installed:

An example Elasticsearch response looks as follows:

.. code-block:: none
             :class: output

              {
                "name" : "node-1",
                "cluster_name" : "elasticsearch",
                "cluster_uuid" : "O82AgJJTTF2pTOXKPnwQsA",
                "version" : {
                  "number" : "7.6.1",
                  "build_flavor" : "oss",
                  "build_type" : "rpm",
                  "build_hash" : "aa751e09be0a5072e8570670309b1f12348f023b",
                  "build_date" : "2020-02-29T00:15:25.529771Z",
                  "build_snapshot" : false,
                  "lucene_version" : "8.4.0",
                  "minimum_wire_compatibility_version" : "6.8.0",
                  "minimum_index_compatibility_version" : "6.0.0-beta1"
                },
                "tagline" : "You Know, for Search"
              }

Elasticsearch users and roles
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

In order to use Wazuh Kibana plugin properly, the script adds the following extra Elasticsearch users:

- ``wazuh_user`` is created for those users that only need read access to the Wazuh Kibana plugin.

- ``wazuh_admin`` is the user recommended for those users that need administrative privileges.

Apart from the extra users, there are three extra roles added. These roles are in charge of giving the right permissions to the users:

- ``wazuh_ui`` gives enough privileges to ``kibanaserver`` user to operate with Wazuh’s indexes.

- ``wazuh_ui_user`` provides ``wazuh_user`` ability to read Wazuh’s indexes.

- ``wazuh_ui_admin`` allows ``wazuh_admin`` to perform, reading, writing, management, and indexing task on the Wazuh indexes.

These users and roles are designed to be used along with the Wazuh Kibana plugin and they are protected so they cannot be modified from the Kibana’s interface. To modify them or add new users or roles, the ``securityadmin`` script will have to be executed. To learn more about this process, visit the `Open Distro for Elasticsearch documentation <https://opendistro.github.io/for-elasticsearch-docs/docs/security-access-control/users-roles/>`_.

Customizing the installation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^



Wazuh server installation
-------------------------



Download and run the script providing the following :

.. code-block:: console

    # command

Verifying the Filbeat installation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The output of the script will indicate if Filebeat was successfully installed:

An example Filebeat response looks as follows:

.. code-block:: none
             :class: output

              elasticsearch: https://127.0.0.1:9200...
                parse url... OK
                connection...
                  parse host... OK
                  dns lookup... OK
                  addresses: 127.0.0.1
                  dial up... OK
                TLS...
                  security: server's certificate chain verification is enabled
                  handshake... OK
                  TLS version: TLSv1.3
                  dial up... OK
                talk to server... OK
                version: 7.6.1

Customizing the installation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

After the installation, the Wazuh API will use the default credentials but it is highly recommended to change them. The following document :ref:`securing_api` explains how to change the default user and password among other useful API security information.


Kibana installation
-------------------



Customizing the installation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The Kibana configuration found at the ``/etc/kibana/kibana.yml`` file has the ``server.host`` parameter set to ``0.0.0.0``. It means that Kibana can be accessed from the outside and will accept all the available IPs of the machine.  This value can be changed for a specific IP if needed.

.. note:: The Kibana service listens to the default port ``443``. The browser address will be: ``https://<kibana_ip>`` replacing ``<kibana_ip>`` by the Kibana server IP. The default user and password to access Kibana is ``wazuh_user``.

It is highly recommended to change Elasticsearch’s default passwords for the users found at the ``/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml`` file. More information about this process can be found :ref:`here <change_elastic_pass>`.

With the first access to Kibana, the browser shows a warning message stating that the certificate was not issued by a trusted authority. This can be accepted by clicking on ``Advanced options`` to add an exception or, for increased security, by importing the ``root-ca.pem``, found in the ``/etc/kibana/certs`` directory, to the Certificate Manager of each browser that will access the Kibana interface or use a certificate from a trusted authority.


Next steps
----------

Once the Wazuh-Elastic Stack environment is ready, a Wazuh agent can be installed in every endpoint to be monitored. The Wazuh agent installation guide is available for most operating systems and can be found :ref:`here<installation_agents>`.
