.. _use_cases:

Use cases
=========

Wazuh is often used to meet compliance requirements (such PCI DSS or HIPAA) and configuration standards (CIS hardening guides). It is also popular among IaaS users (eg. Amazon AWS, Azure or Google cloud), where deploying a host-based IDS in the running instances can be combined with the analysis of the infrastructure events (pulled directly from the API).

Here is a list of common use cases:

- Signature-based log analysis.
- File integrity monitoring.
- Rootkis detection.
- Security policy monitoring.
- Monitoring Amazon AWS.

Signature-based log analysis
----------------------------

Automated log analysis and management accelerates threats detection. There are many cases where evicence of an attack can be found in the logs of your devices, systems and applications. Wazuh can be used to automatically aggregate and analyze log data.

Usually it is the Wazuh agent (running in the monitored host), the one in charge of reading operating system and application log messages, forwarding those to the Wazuh server, where the analysis takes place. The server can also receive data via syslog, from network devices or applications.

Wazuh uses decoders to identify the source application of the log message, and then analyzes it using application specific rules. Here is an example of a rule used to detect SSH authentication failure events:

.. code-block:: xml

  <rule id="5716" level="5">
    <if_sid>5700</if_sid>
    <match>^Failed|^error: PAM: Authentication</match>
    <description>SSHD authentication failed.</description>
    <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>
  </rule>

Rules include a ``match`` field, used to define the pattern the rule is going to be looking for. It also has a ``level`` field that specifies the resulting alert priority. 

The manager will generate an alert every time an event collected by one of the agents (or via syslog) matches a rule (with level higher than zero).

Here is an example found in ``/var/ossec/logs/alerts/alerts.json``:

.. code-block:: json

  {
    "agent": {
        "id": "002", 
        "ip": "10.0.0.125", 
        "name": "vpc-agent-centos-public"
    }, 
    "decoder": {
        "name": "sshd", 
        "parent": "sshd"
    }, 
    "dstuser": "root", 
    "full_log": "Feb 22 23:22:45 vpc-agent-centos-public sshd[8461]: Failed password for root from 183.214.141.100 port 1409 ssh2", 
    "location": "/var/log/secure", 
    "manager": {
        "name": "vpc-ossec-manager"
    }, 
    "program_name": "sshd", 
    "rule": {
        "description": "sshd: authentication failed.", 
        "firedtimes": 206, 
        "groups": [
            "syslog", 
            "sshd", 
            "authentication_failed"
        ], 
        "id": "5716", 
        "level": 5, 
        "pci_dss": [
            "10.2.4", 
            "10.2.5"
        ]
    }, 
    "srcip": "183.214.141.100", 
    "srcport": "1409", 
    "timestamp": "2017-02-22T15:20:39-0800"
  }

Once generated by the manager, the alerts are sent to the Elastic Stack component where they are enriched with Geolocation information, stored and indexed. Kibana can be then used to search, analyze and visualize the data. See below the alert as displayed in the interface:




Wazuh provide default ruleset, updated periodically, with over 1,600 rules for different applications.

File integrity monitoring
-------------------------

Rootkits detection
------------------

Security policy monitoring
--------------------------

Monitoring Amazon AWS
---------------------183.214.141.100
